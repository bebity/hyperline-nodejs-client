export namespace OAuth2 {
  export type UserInfos = {
    /** User given name */
    given_name: string;

    /** User family name */
    family_name: string;

    /** User full name */
    name: string;

    /** User picture URL */
    picture: string;

    /** User email */
    email: string;

    /** Indicates if the user email is verified */
    email_verified: boolean;
  };

  export type AuthTokens = {
    /** Access token with which you will be able to access the Hyperline API on the organisation's behalf. */
    access_token: string;

    /** Refresh token with which you will be able to retrieve a new access token on this endpoint. The refresh token does not expire. */
    refresh_token: string;

    /** The number of seconds left before the app access token expires. Be sure to renew your app access token before this reaches zero. */
    expires_in: number;

    /** Available options: bearer */
    token_type: 'bearer';
  };

  export type GetAuthorizeUrlInput = {
    /** Application's client ID. */
    client_id: string;

    /** Identifier of the target API. Should be left empty by default. */
    audience?: string;

    /** A space-separated list of permissions your app requires. Should be left empty by default. */
    scope?: string;

    /** Available options: code */
    response_type: 'code';

    /** The URL to which Hyperline will redirect the browser after authorization has been granted by the user. It must match one of the callback URL you set when registering your app. */
    redirect_uri: string;

    /** A random string generated by your app to prevent CSRF attacks. This value will be included in the query parameter when redirecting to the redirect_uri after authorizing your app. */
    state: string;
  };

  export namespace GetAuthTokensInput {
    export type Opt1 = {
      /** Application's client ID. */
      client_id: string;

      /** Application's client secret. */
      client_secret: string;

      /** Available options: authorization_code */
      grant_type: 'authorization_code';

      /** The authorization code received from the authorization server. */
      code: string;

      /** Must match the value set at the GET /authorize endpoint. */
      redirect_uri: string;
    };

    export type Opt2 = {
      /** Application's client ID. */
      client_id: string;

      /** Application's client secret. */
      client_secret: string;

      /** Available options: authorization_code */
      grant_type: 'refresh_token';

      /** The refresh token received when creating the authorization. */
      refresh_token: string;
    };

    export type Input = Opt1 | Opt2;
  }

  export type RevokeTokenInput = {
    /** Application's client ID. */
    client_id: string;

    /** Application's client secret. */
    client_secret: string;

    /** The refresh token received when creating the authorization. */
    token: string;
  };
}
